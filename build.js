!function(t){var e={};function s(i){if(e[i])return e[i].exports;var n=e[i]={i:i,l:!1,exports:{}};return t[i].call(n.exports,n,n.exports,s),n.l=!0,n.exports}s.m=t,s.c=e,s.d=function(t,e,i){s.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:i})},s.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},s.t=function(t,e){if(1&e&&(t=s(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var i=Object.create(null);if(s.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var n in t)s.d(i,n,function(e){return t[e]}.bind(null,n));return i},s.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return s.d(e,"a",e),e},s.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},s.p="",s(s.s=0)}([function(t,e,s){"use strict";s.r(e);var i=class{constructor(){this.state={}}setState(t,e){const s=Object.assign(this.state,{[t]:e});this.state=s}getState(t){return this.state[t]}};var n=class extends i{constructor(t,e,s,i,n,a,o){super(),console.log(o,"init"),this.setState({position:{x:t,y:e},dimensions:{width:s,height:i},speed:n,colour:a,render:o})}render(){const t=this.getState("render");console.log(t)}};class a{constructor(){const t=document.getElementById("canvas");this.state={game:{fps:30,lastTime:(new Date).getTime(),currentTime:0,delta:0,interval:1e3/30},canvas:{canvas:t,width:t.width,height:t.height,ctx:t.getContext("2d")},player:new n(10,10,10,10,10,"green",()=>{const{player:t}=this.state,{right:e,left:s,up:i,down:n}=this.state.controls;this.movePlayer(e.active,s.active,i.active,n.active),this.state.canvas.ctx.fillStyle=t.colour,this.state.canvas.ctx.fillRect(t.x,t.y,t.width,t.height)}),controls:{left:{code:37,active:!1},right:{code:39,active:!1},up:{code:40,active:!1},down:{code:38,active:!1}}},this.events(),this.loop()}setState(t,e){const s=Object.assign({},this.state);return s[t]=e,this.state=s,s}input(t){const e=Object.assign({},this.state.controls),s="keydown"===t.type;39===t.keyCode&&(e.right.active=s),37===t.keyCode&&(e.left.active=s),40===t.keyCode&&(e.up.active=s),38===t.keyCode&&(e.down.active=s),this.setState("controls",e)}isInCanvasBounds(t){const e=[0,0,0,0];return t.x+t.speed<this.state.canvas.width-t.width&&(e[0]=this.state.canvas.width-t.width-(t.x+t.speed)),t.y+t.speed<this.state.canvas.height-t.height&&(e[1]=this.state.canvas.height-t.height-(t.y+t.speed)),t.x+t.speed>0&&(e[2]=t.x-t.speed),t.y+t.speed>0&&(e[3]=t.y-t.speed),e}events(){document.addEventListener("keydown",this.input.bind(this),!1),document.addEventListener("keyup",this.input.bind(this),!1)}clear(){this.state.canvas.ctx.clearRect(0,0,this.state.canvas.width,this.state.canvas.width)}movePlayer(t,e,s,i){const n=Object.assign({},this.state.player),{speed:a}=n,o=this.isInCanvasBounds(n);t&&o[0]>0&&(n.x+=a),e&&o[2]>0&&(n.x-=a),s&&o[1]>0&&(n.y+=a),i&&o[3]>0&&(n.y-=a),this.setState("player",n)}moveAi(){const{ai:t}=this.state,e=this.isInCanvasBounds(t),s=this.isInCanvasBounds(this.state.player);e[0]>0&&e[0]-s[0]>0&&(t.x+=t.speed),e[2]&&e[2]-s[2]>0&&(t.x-=t.speed),e[1]&&e[1]-s[1]>0&&(t.y+=t.speed),e[3]&&e[3]-s[3]>0&&(t.y-=t.speed),this.setState("ai",t)}loop(){if(!this.state.game.paused){const t=Object.assign({},this.state.game);window.requestAnimationFrame(this.loop.bind(this)),t.currentTime=(new Date).getTime(),t.delta=t.currentTime-t.lastTime,t.delta>t.interval&&(this.render(),t.lastTime=t.currentTime-t.delta%t.interval),this.setState("game",t)}}static detectCollision(t,e){return t.x<e.x+e.width&&t.x+t.width>e.x&&t.y<e.y+e.height&&t.height+t.y>e.y}render(){if(this.clear(),this.state.player.render(),a.detectCollision(this.state.player,this.state.ai)){const{game:t}=this.state;t.paused=!0,this.setState("game",t),console.log("PAUSED AS DEAD")}}}document.addEventListener("DOMContentLoaded",()=>{window.game=new a},!1)}]);